// Игровой движок
// Разбор Игрового Движка
// Обработка Событий



Игровой движок
У любой реализации компьютерной игры со стороны разработчика есть три стадии:
Инициализация игры. Сюда можно отнести различные подготовительные действия: установку размера и прорисовку игрового поля,
создание и установку игровых объектов в начальное положение, а также любые другие действия, которые необходимо выполнить в начале игры.
Создаем основной класс игры
Метод initialize() — это аналог метода main(): именно с него начинает выполняться весь ваш код, написанный для игры.
Создание игрового поля
Игровой процесс. Сюда можно отнести движение игровых объектов, действия игрока, учет заработанных очков, а также любые другие действия,
которые необходимо выполнять с определенной периодичностью или по нажатию кнопок.
Завершение игры. Сюда можно отнести остановку анимации, сообщение о победе/поражении, а также любые другие действия, которые необходимо выполнить в конце игры.

Разбор Игрового Движка
Работа с цветом
Диалоговые окна
Утилитные методы
При написании игр часто используются случайные числа. Чтобы упростить получение случайных чисел, можно использовать утилитные методы движка:
int getRandomNumber(int max) — возвращает случайное целое число от 0 до (max–1) включительно.
int getRandomNumber(int min, int max) – возвращает случайное целое число от min до (max–1) включительно
JDK 11+
Во время запуска из IntelliJ IDEA класса, который наследуется от класса Game, можно получить такую ошибку:
Error: JavaFX runtime components are missing, and are required to run this application
В этом случае для каждого такого класса нужно один раз выполнить:
Откройте меню Run → EditConfiguration
Пропишите VM options:
--module-path ./lib/javafx-sdk-16/lib --add-modules=javafx.controls,javafx.fxml,javafx.base
ВНИМАНИЕ:
В последних версиях IntelliJ IDEA поле VM options не отображается по умолчанию. Для его отображения нажми Alt + V
Нажимайте: Apply → OK
Запускайте игру.

Обработка Событий
От игрового движка было бы мало толку, если бы мы просто могли с его помощью рисовать что-то на экране. Для написания
полноценной игры ей нужно взаимодействовать с пользователем! А если точнее, наша программа должна отслеживать действия пользователя и реагировать на них.
Работа с мышкой
Для работы с мышкой у игрового движка есть два метода
void onMouseLeftClick(int x, int y)
void onMouseRightClick(int x, int y)
Работа с клавиатурой
Для работы с клавиатурой у игрового движка есть два метода
void onKeyPress(Key key);
void onKeyReleased(Key key);