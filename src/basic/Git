git commands

add - добавляет содержимое рабочего каталога в индекс (staging area) для последующего коммита

commit - берёт все данные, добавленные в индекс с помощью git add, и сохраняет их слепок во внутренней
базе данных, а затем сдвигает указатель текущей ветки на этот слепок.

push - используется для установления связи с удалённым репозиторием, вычисления локальных изменений отсутствующих в нём,
и собственно их передачи в вышеупомянутый репозиторий. Этой команде нужно право на запись в репозиторий, поэтому она
использует аутентификацию.

pull - работает как комбинация команд git fetch и git merge, т.е. Git вначале забирает изменения из указанного удалённого
репозитория, а затем пытается слить их с текущей веткой.

rebase (перебазирование) - один из способов в git, позволяющий объединить изменения двух веток. У этого способа есть
преимущество перед merge (слияние) — он позволяет переписать историю ветки, придав истории тот вид, который нам нужен.

checkout - используется для переключения веток и выгрузки их содержимого в рабочую директорию.

status - показывает состояния файлов в рабочем каталоге и индексе: какие файлы изменены, но не добавлены в индекс;
какие ожидают коммита в индексе. Вдобавок к этому выводятся подсказки о том, как изменить состояние файлов.



пореже:

clone - это утилита для выбора существующего репозитория и создания его клона, т. е. копии.

log - используется для просмотра истории коммитов, начиная с самого свежего и уходя к истокам проекта.
По умолчанию, она показывает лишь историю текущей ветки, но может быть настроена на вывод истории других,
даже нескольких сразу, веток. Также её можно использовать для просмотра различий между ветками на уровне коммитов.

reset - используется в основном для отмены изменений. Она изменяет указатель HEAD и, опционально, состояние индекса.
Также эта команда может изменить файлы в рабочем каталоге при использовании параметра --hard, что может привести к
потере наработок при неправильном использовании, так что убедитесь в серьёзности своих намерений прежде чем использовать его.

git branch - это своего рода “менеджер веток”. Она умеет перечислять ваши ветки, создавать новые, удалять и переименовывать их.

merge -  используется для слияния одной или нескольких веток в текущую. Затем она устанавливает указатель текущей ветки
на результирующий коммит.